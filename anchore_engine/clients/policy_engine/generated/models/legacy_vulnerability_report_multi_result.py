# coding: utf-8

"""
    anchore_engine.services.policy_engine

    This is a policy evaluation service. It receives push-events from external systems for data updates and provides an api for requesting image policy checks  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: zach@anchore.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class LegacyVulnerabilityReportMultiResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'rowcount': 'int',
        'colcount': 'int',
        'header': 'list[str]',
        'rows': 'list[list[str]]'
    }

    attribute_map = {
        'rowcount': 'rowcount',
        'colcount': 'colcount',
        'header': 'header',
        'rows': 'rows'
    }

    def __init__(self, rowcount=None, colcount=None, header=None, rows=None):  # noqa: E501
        """LegacyVulnerabilityReportMultiResult - a model defined in Swagger"""  # noqa: E501

        self._rowcount = None
        self._colcount = None
        self._header = None
        self._rows = None
        self.discriminator = None

        if rowcount is not None:
            self.rowcount = rowcount
        if colcount is not None:
            self.colcount = colcount
        if header is not None:
            self.header = header
        if rows is not None:
            self.rows = rows

    @property
    def rowcount(self):
        """Gets the rowcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501


        :return: The rowcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :rtype: int
        """
        return self._rowcount

    @rowcount.setter
    def rowcount(self, rowcount):
        """Sets the rowcount of this LegacyVulnerabilityReportMultiResult.


        :param rowcount: The rowcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type: int
        """

        self._rowcount = rowcount

    @property
    def colcount(self):
        """Gets the colcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501


        :return: The colcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :rtype: int
        """
        return self._colcount

    @colcount.setter
    def colcount(self, colcount):
        """Sets the colcount of this LegacyVulnerabilityReportMultiResult.


        :param colcount: The colcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type: int
        """

        self._colcount = colcount

    @property
    def header(self):
        """Gets the header of this LegacyVulnerabilityReportMultiResult.  # noqa: E501

        List of column names in the order the values appear in the rows section  # noqa: E501

        :return: The header of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :rtype: list[str]
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this LegacyVulnerabilityReportMultiResult.

        List of column names in the order the values appear in the rows section  # noqa: E501

        :param header: The header of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type: list[str]
        """

        self._header = header

    @property
    def rows(self):
        """Gets the rows of this LegacyVulnerabilityReportMultiResult.  # noqa: E501

        Data rows, each row has the same length and is colcount long  # noqa: E501

        :return: The rows of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :rtype: list[list[str]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this LegacyVulnerabilityReportMultiResult.

        Data rows, each row has the same length and is colcount long  # noqa: E501

        :param rows: The rows of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type: list[list[str]]
        """

        self._rows = rows

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LegacyVulnerabilityReportMultiResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
